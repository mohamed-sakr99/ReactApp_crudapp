{"version":3,"sources":["components/CourseForm.js","components/CourseList.js","App.js","reportWebVitals.js","index.js"],"names":["CourseForm","props","onSubmit","addCourse","type","value","current","onChange","updateCourse","CourseList","state","isEdit","renderCourse","details","name","onClick","toggleState","deleteCourse","index","updateCourseItem","e","preventDefault","editCourse","input","renderUpdateForm","ref","v","defaultValue","setState","this","Component","App","courses","target","push","splice","courseList","map","course","className","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"oNASeA,EARG,SAACC,GACd,OACG,uBAAMC,SAAUD,EAAME,UAAtB,UACI,uBAAOC,KAAK,OAAOC,MAAOJ,EAAMK,QAASC,SAAUN,EAAMO,eACzD,wBAAQJ,KAAK,SAAb,4BC0CGK,E,4MA7CVC,MAAQ,CACJC,QAAQ,G,EAGbC,aAAc,WACV,OACI,+BACI,+BAAO,EAAKX,MAAMY,QAAQC,OAC1B,wBAAQC,QAAS,WAAK,EAAKC,eAA3B,yBACA,wBAAQD,QAAS,WAAK,EAAKd,MAAMgB,aAAa,EAAKhB,MAAMiB,QAAzD,+B,EAIZC,iBAAiB,SAACC,GACdA,EAAEC,iBACF,EAAKpB,MAAMqB,WAAW,EAAKrB,MAAMiB,MAAO,EAAKK,MAAMlB,OACnD,EAAKW,e,EAITQ,iBAAkB,WACd,OACI,uBAAMtB,SAAU,EAAKiB,iBAArB,UACI,uBAAOf,KAAK,OAAOqB,IAAM,SAACC,GAAM,EAAKH,MAAOG,GAAIC,aAAc,EAAK1B,MAAMY,QAAQC,OACjF,uD,EAKZE,YAAa,WAAM,IACVL,EAAS,EAAKD,MAAdC,OACL,EAAKiB,SAAS,CACVjB,QAAQA,K,uDAGP,IACAA,EAASkB,KAAKnB,MAAdC,OACL,OACI,cAAC,WAAD,UACKA,EAASkB,KAAKL,mBAAqBK,KAAKjB,qB,GAxChCkB,aCgETC,E,4MA3DZrB,MAAQ,CACJsB,QAAS,CACL,CAAClB,KAAM,QACP,CAACA,KAAM,OACP,CAACA,KAAM,WAEXR,QAAQ,I,EAIZE,aAAc,SAACY,GACX,EAAKQ,SAAS,CACVtB,QAASc,EAAEa,OAAO5B,S,EAI1BF,UAAW,SAACiB,GACRA,EAAEC,iBACF,IAAIW,EAAU,EAAKtB,MAAMsB,QACrB1B,EAAU,EAAKI,MAAMJ,QACzB0B,EAAQE,KAAK,CAACpB,KAAMR,IACpB,EAAKsB,SAAS,CACVI,UACA1B,QAAQ,M,EAKhBW,aAAc,SAACC,GACX,IAAIc,EAAU,EAAKtB,MAAMsB,QACzBA,EAAQG,OAAOjB,EAAO,GACtB,EAAKU,SAAS,CACVI,a,EAKRV,WAAY,SAACJ,EAAOb,GACpB,IAAI2B,EAAU,EAAKtB,MAAMsB,QACZA,EAAQd,GACf,KAAUb,EAChB,EAAKuB,SAAS,CACVI,a,uDAGM,IAAD,OAECI,EADUP,KAAKnB,MAAMsB,QACAK,KAAI,SAACC,EAAQpB,GACpC,OAAO,cAAC,EAAD,CAAYL,QAASyB,EAAoBpB,MAAOA,EAAOD,aAAc,EAAKA,aAAcK,WAAY,EAAKA,YAAvEJ,MAE5C,OACI,0BAASqB,UAAU,MAAnB,UACI,4CACA,cAAC,EAAD,CAAYjC,QAASuB,KAAKnB,MAAMJ,QAASE,aAAcqB,KAAKrB,aAAcL,UAAW0B,KAAK1B,YAC1F,6BAAKiC,W,GAxDHN,aCQJU,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.87ac3a1c.chunk.js","sourcesContent":["import React from 'react';\r\nconst CourseForm =(props)=>{\r\n     return (\r\n        <form onSubmit={props.addCourse}>\r\n            <input type=\"text\" value={props.current} onChange={props.updateCourse}/>\r\n            <button type=\"submit\">Add Course</button>\r\n        </form>\r\n     )\r\n}\r\nexport default CourseForm;\r\n","import React ,{Component, Fragment} from 'react';\r\nclass CourseList extends Component {\r\n     state = {\r\n         isEdit: false\r\n     }\r\n    //render Course\r\n    renderCourse =()=> {\r\n        return (\r\n            <li>\r\n                <span>{this.props.details.name}</span>\r\n                <button onClick={()=>{this.toggleState()}}>Edit Course</button>\r\n                <button onClick={()=>{this.props.deleteCourse(this.props.index)}}>Delete Course</button>\r\n            </li>\r\n        )\r\n    }\r\n    updateCourseItem=(e)=> {\r\n        e.preventDefault();\r\n        this.props.editCourse(this.props.index, this.input.value);\r\n        this.toggleState();\r\n    }\r\n\r\n    //render Update Form\r\n    renderUpdateForm =()=> {\r\n        return (\r\n            <form onSubmit={this.updateCourseItem}>\r\n                <input type=\"text\" ref={ (v)=> {this.input= v}} defaultValue={this.props.details.name} />\r\n                <button>update Course</button>\r\n            </form>\r\n        )\r\n    }\r\n    //  toggle State\r\n    toggleState =()=> {\r\n        let {isEdit} =this.state;\r\n        this.setState({\r\n            isEdit:!isEdit\r\n        })\r\n    }\r\n    render(){\r\n        let {isEdit} =this.state;\r\n        return(\r\n            <Fragment>\r\n                {isEdit ? this.renderUpdateForm() : this.renderCourse()}\r\n            </Fragment>\r\n        )\r\n    }\r\n} \r\n\r\nexport default CourseList;\r\n","import React,{Component} from 'react';\nimport CourseForm from './components/CourseForm';\nimport CourseList from './components/CourseList';\n\n class App extends Component {\n\n    state = {\n        courses :[\n            {name: 'HTML'},\n            {name: 'CSS'},\n            {name: 'JQUERY'}\n        ],\n        current:''\n    }    \n\n    //Add Course\n    updateCourse =(e)=> {\n        this.setState({\n            current: e.target.value\n        })\n    }\n    //Add Course\n    addCourse =(e)=> {\n        e.preventDefault();\n        let courses = this.state.courses;\n        let current = this.state.current;\n        courses.push({name: current});\n        this.setState({\n            courses,\n            current:''\n        })\n    }\n\n    //Delete Course\n    deleteCourse =(index)=> {\n        let courses = this.state.courses;\n        courses.splice(index, 1)\n        this.setState({\n            courses\n        })\n    }\n\n    //Edit Course\n    editCourse =(index, value)=> {\n    let courses = this.state.courses;\n    let course = courses[index];\n    course['name'] =value;\n    this.setState({\n        courses\n    })\n    }\n     render(){\n        const courses = this.state.courses;\n        const courseList = courses.map((course, index)=> {\n            return <CourseList details={course} key={index} index={index} deleteCourse={this.deleteCourse} editCourse={this.editCourse}/> \n        })\n         return(\n             <section className=\"App\">\n                 <h2>Add Course</h2>\n                 <CourseForm current={this.state.current} updateCourse={this.updateCourse} addCourse={this.addCourse}/>\n                 <ul>{courseList}</ul>\n             </section>\n         )\n     }\n }\n export default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}